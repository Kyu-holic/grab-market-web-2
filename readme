1. npm install -g create-react-app 으로 리액트 설치

2. create-react-app . 으로 시작 (git bash에서 할 것)

3. public에 images 폴더 생성 및 이미지 넣기

4. src에서 MainPage폴더를 만들고 main 페이지에서 사용되는 index.css 옮기기(혹은 작성)

5. MainPage 폴더에 index.js를 생성하여 main페이지에 들어갈 내용들 작성 준비. 

6. App.js 에서 MainPage Component 불러오기

7. MainPage component에서 메인 페이지의 html코드들을 작성후 css 연결.

8. Axios 연결

9. MainPage의 return 부분에서 product-list 밑에 product-card 작성

10. axios의 then을 통해 products 안에는 result안의 products 값이 들어있는데, 리액트에서는 useState를 사용하여 값을 넣는다.

11. map함수를 이용하여 products의 길이만큼 반복하기

12. setProducts를 하여 업데이트하기

13. useEffect를 이용하여 네트워크 통신이 한번만 일어나게 하기

14. products의 값이 map함수를 통하여 product 변수 안에 들어갔으므로
    이미지, 상품 이름, 가격, 판매자를 product 값을 이용하여 넣는다.

15. component를 변경해주는 기능을 실행하기 위해 npm install react-router-dom@5.2.0을 이용하여 설치 

16. 루트 디렉토리의 index.js에 BrowserRouter를 불러와서 감싸주기

17. Upload를 위한 디렉토리를 만들어서 index.js 생성

18. Product 설명을 위한 디렉토리를 만들어서 index.js 생성

19. APp.js에서 Upload, Product component 불러오기

20. App.js 에서 Swtich, Route를 이용하여 Component를 연결시켜주기

21. React-router-dom을 이용하여 Link로 product-card를 Link로 감싸주기

22. App.js의 productPage 링크를 /products/:id로 바꿔서 :id에 숫자가 자유롭게 들어가게 해준다. 여기서 id는 아무 이름으로 정해도 상관없는 듯 
이건 나중에 다시 확인해보기 !!!!!!!!!!!!!!!!!

23. main의 index.js에서 product-link의 link to를 {`/products/${index}`}로 바꿔서 index가 숫자로 들어가게 만든다. index는 map함수의 속성

24. product의 index.js에서 useParams를 사용하면 App.js의 Route가 parameter(여기서는 :id)를 ProductPage component에 값을 넣어주게 된다.